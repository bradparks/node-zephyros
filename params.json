{"name":"Zephyros","tagline":"","body":"# Zephyros [![Build Status](https://travis-ci.org/danielepolencic/zephyros.png)](https://travis-ci.org/danielepolencic/zephryos)\r\nNode.js adapter for [Zephyros](https://github.com/sdegutis/zephyros).\r\n\r\n## Usage\r\nInclude `zephiros` in your script and you're ready to go!\r\n\r\n    var Zephyros = require('zephyros');\r\n\r\n    var z = new Zephyros({\r\n      port: 1235,\r\n      host: 'localhost'\r\n    });\r\n\r\n    z.bind('t', ['Cmd', 'Shift']).thenClipboardContents().then(function(clipboard){\r\n      console.log(\"clipboard: \", clipboard);\r\n    });\r\n\r\n## API\r\n*Please note that this is a partial implementation of all the APIs available.*\r\n\r\n- **bind( key<String>, Modifiers<Array> )**\r\n- **thenClipboardContents( callback<function> )**, the clipboard is passed as an\r\n  argument to the callback\r\n- **thenFocusedWindow( callback<function> )**, the window object with the id of the\r\n  window is passed as an argument to the callback\r\n- **thenGetWindowFrame( callback<function> )**, the window object with the id and the frame of the window are passed as an argument to the callback\r\n- **thenSetWindowFrame( callback<function> )**, expect the callback to return\r\n  a window object with id and frame properties.\r\n\r\n## Tests\r\nTests are written in [Mocha](http://visionmedia.github.io/mocha/). Simply run\r\nthe test with:\r\n\r\n    ~$ mocha\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}